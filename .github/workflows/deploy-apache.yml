name: Deploy Apache to EKS

on:
  push:
    branches:
      - main  # Déclenche le déploiement uniquement sur un push vers la branche `main`

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Check out le code du repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Configurer AWS CLI
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    # Étape 3 : Configurer kubectl pour interagir avec votre cluster EKS
    - name: Install kubectl
      run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
    - name: Set up kubectl
      run: |
        aws eks update-kubeconfig --name cluster2 --region us-east-1  # Remplacez 'cluster2' par le nom de votre cluster

    # Étape 4 : Appliquer le fichier de déploiement Apache YAML
    - name: Deploy Apache to EKS
      run: |
        kubectl apply -f apache-deployment.yaml
        kubectl apply -f apache-service.yaml
      
    - name: Verify Deployment
      run: |
        kubectl get pods -n kubespace
        kubectl get svc -n kubespace

